"use strict";const n=require("electron"),s={chooseDir:()=>n.ipcRenderer.invoke("fs:chooseDir"),list:e=>n.ipcRenderer.invoke("fs:list",e),setWatch:e=>n.ipcRenderer.invoke("fs:setWatch",e),openPath:e=>n.ipcRenderer.invoke("fs:openPath",e),revealInFolder:e=>n.ipcRenderer.invoke("fs:revealInFolder",e),trash:e=>n.ipcRenderer.invoke("fs:trash",e),rename:(e,i)=>n.ipcRenderer.invoke("fs:rename",e,i),newFolder:(e,i)=>n.ipcRenderer.invoke("fs:newFolder",e,i),getDrives:()=>n.ipcRenderer.invoke("fs:getDrives"),getKnownFolders:()=>n.ipcRenderer.invoke("fs:getKnownFolders"),getFreeSpace:e=>n.ipcRenderer.invoke("fs:getFreeSpace",e),getFileIcon:(e,i)=>n.ipcRenderer.invoke("fs:getFileIcon",e,i),onFsChanged:e=>{const i=(o,r)=>e(r);return n.ipcRenderer.on("fs:changed",i),()=>n.ipcRenderer.removeListener("fs:changed",i)},copyFiles:(e,i)=>n.ipcRenderer.invoke("fs:copyFiles",e,i),moveFiles:(e,i)=>n.ipcRenderer.invoke("fs:moveFiles",e,i),compressToZip:e=>n.ipcRenderer.invoke("fs:compressToZip",e),extractArchive:e=>n.ipcRenderer.invoke("fs:extractArchive",e),createShortcut:e=>n.ipcRenderer.invoke("fs:createShortcut",e),shareFiles:e=>n.ipcRenderer.invoke("fs:shareFiles",e),getFileHash:e=>n.ipcRenderer.invoke("fs:getFileHash",e),showProperties:e=>n.ipcRenderer.invoke("fs:showProperties",e),showOpenWithDialog:e=>n.ipcRenderer.invoke("fs:showOpenWithDialog",e),openWith:(e,i)=>n.ipcRenderer.invoke("fs:openWith",e,i),openInNewWindow:e=>n.ipcRenderer.invoke("fs:openInNewWindow",e),printFile:e=>n.ipcRenderer.invoke("fs:printFile",e),editFile:e=>n.ipcRenderer.invoke("fs:editFile",e),sendToDesktop:e=>n.ipcRenderer.invoke("fs:sendToDesktop",e),pinToQuickAccess:e=>n.ipcRenderer.invoke("fs:pinToQuickAccess",e),setFileAttributes:(e,i)=>n.ipcRenderer.invoke("fs:setFileAttributes",e,i),scanWithDefender:e=>n.ipcRenderer.invoke("fs:scanWithDefender",e),takeOwnership:e=>n.ipcRenderer.invoke("fs:takeOwnership",e),openInTerminal:e=>n.ipcRenderer.invoke("fs:openInTerminal",e),openInPowerShell:e=>n.ipcRenderer.invoke("fs:openInPowerShell",e),setAsWallpaper:e=>n.ipcRenderer.invoke("fs:setAsWallpaper",e),rotateImage:(e,i)=>n.ipcRenderer.invoke("fs:rotateImage",e,i),batchRename:(e,i)=>n.ipcRenderer.invoke("fs:batchRename",e,i),convertToPDF:e=>n.ipcRenderer.invoke("fs:convertToPDF",e),createNewFile:(e,i,o)=>n.ipcRenderer.invoke("fs:createNewFile",e,i,o),getFilePermissions:e=>n.ipcRenderer.invoke("fs:getFilePermissions",e),setFilePermissions:(e,i)=>n.ipcRenderer.invoke("fs:setFilePermissions",e,i),getFileHashes:e=>n.ipcRenderer.invoke("fs:getFileHashes",e),duplicateItem:e=>n.ipcRenderer.invoke("fs:duplicateItem",e),minimize:()=>n.ipcRenderer.invoke("window:minimize"),maximize:()=>n.ipcRenderer.invoke("window:maximize"),unmaximize:()=>n.ipcRenderer.invoke("window:unmaximize"),close:()=>n.ipcRenderer.invoke("window:close"),isMaximized:()=>n.ipcRenderer.invoke("window:isMaximized"),onMaximize:e=>{const i=()=>e();return n.ipcRenderer.on("window:maximized",i),()=>n.ipcRenderer.removeListener("window:maximized",i)},onUnmaximize:e=>{const i=()=>e();return n.ipcRenderer.on("window:unmaximized",i),()=>n.ipcRenderer.removeListener("window:unmaximized",i)},checkForUpdates:()=>n.ipcRenderer.invoke("update:check"),downloadUpdate:()=>n.ipcRenderer.invoke("update:download"),installUpdate:()=>n.ipcRenderer.invoke("update:install"),onUpdateChecking:e=>{const i=()=>e();return n.ipcRenderer.on("update:checking",i),()=>n.ipcRenderer.removeListener("update:checking",i)},onUpdateAvailable:e=>{const i=(o,r)=>e(r);return n.ipcRenderer.on("update:available",i),()=>n.ipcRenderer.removeListener("update:available",i)},onUpdateNotAvailable:e=>{const i=()=>e();return n.ipcRenderer.on("update:not-available",i),()=>n.ipcRenderer.removeListener("update:not-available",i)},onUpdateDownloadProgress:e=>{const i=(o,r)=>e(r);return n.ipcRenderer.on("update:download-progress",i),()=>n.ipcRenderer.removeListener("update:download-progress",i)},onUpdateDownloaded:e=>{const i=(o,r)=>e(r);return n.ipcRenderer.on("update:downloaded",i),()=>n.ipcRenderer.removeListener("update:downloaded",i)},onUpdateError:e=>{const i=(o,r)=>e(r);return n.ipcRenderer.on("update:error",i),()=>n.ipcRenderer.removeListener("update:error",i)}};n.contextBridge.exposeInMainWorld("xvser",s);
